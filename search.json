[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 GPTstudio authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Michel Nivard. Author, maintainer. James Wade. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Nivard M, Wade J (2022). gptstudio: gptstudio adds functionality based OpenAI's GPT family models directly Rstudio. https://github.com/MichelNivard/gptstudio, https://michelnivard.github.io/gptstudio/.","code":"@Manual{,   title = {gptstudio: gptstudio adds functionality based on OpenAI's GPT family of models directly into Rstudio},   author = {Michel Nivard and James Wade},   year = {2022},   note = {https://github.com/MichelNivard/gptstudio, https://michelnivard.github.io/gptstudio/}, }"},{"path":"/index.html","id":"gptstudio-","dir":"","previous_headings":"","what":"gptstudio adds functionality based on OpenAI's GPT family of models directly into Rstudio","title":"gptstudio adds functionality based on OpenAI's GPT family of models directly into Rstudio","text":"goal gptstudio R programmers easily incorporate use large language models (LLMs) project workflows. models appear step change use text knowledge work, carefully consider ethical implications using models. Ethics LLMs (also called Foundation Models) area active discussion. addins, tailored R developers, also see sister package: gpttools","code":""},{"path":"/index.html","id":"install-the-addins-from-this-package","dir":"","previous_headings":"","what":"Install the addins from this package:","title":"gptstudio adds functionality based on OpenAI's GPT family of models directly into Rstudio","text":"","code":"require(devtools) install_github(\"MichelNivard/gptstudio\")"},{"path":"/index.html","id":"privacy-notice","dir":"","previous_headings":"","what":"Privacy Notice","title":"gptstudio adds functionality based on OpenAI's GPT family of models directly into Rstudio","text":"functions work taking text code highlighted/selected cursor send OpenAI part prompt, fall privacy notice/rules/exceptions agreed OpenAI making account. know secure sent OpenAI, also don’t know OpenAI . code designed share highlighted/selected text elements R environment (.e. data) unless highlighted running addin. may limit usability now, want people accidentally share sensitive data OpenAI. HIGHLIGHT, THEREFORE UPLOAD, DATA/CODE/TEXT REMAIN PRIVATE","code":""},{"path":"/index.html","id":"prerequisites","dir":"","previous_headings":"","what":"Prerequisites","title":"gptstudio adds functionality based on OpenAI's GPT family of models directly into Rstudio","text":"Make OpenAI account. now, free one . Create OpenAI API key use openai package within Rstudio Set API key Rstudio one two ways: default, functions openai look OPENAI_API_KEY environment variable. want set global environment variable, can use following command, \"<APIKEY>\" replaced actual key: Alternatively, can set key .Renviron file. Otherwise, can add key .Renviron file project. following commands open .Renviron editing: can add following line file (, replace \"<APIKEY>\" actual key): now set API key every time start particular project. Note: using GitHub/Gitlab, forget add .Renviron .gitignore!","code":"Sys.setenv(OPENAI_API_KEY = \"<APIKEY>\") require(usethis) edit_r_environ(scope = \"project\") OPENAI_API_KEY= \"<APIKEY>\")"},{"path":"/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"gptstudio adds functionality based on OpenAI's GPT family of models directly into Rstudio","text":"examples use.","code":""},{"path":"/index.html","id":"spelling-ang-grammar-check","dir":"","previous_headings":"Usage","what":"Spelling ang grammar check","title":"gptstudio adds functionality based on OpenAI's GPT family of models directly into Rstudio","text":"Addins > GPTSTUDIO > Spelling Grammar: Takes selected text sends OpenAI’s best model instructs return spelling grammar checked version. spelling","code":""},{"path":"/index.html","id":"active-voice","dir":"","previous_headings":"Usage","what":"Active voice","title":"gptstudio adds functionality based on OpenAI's GPT family of models directly into Rstudio","text":"Addins > GPTSTUDIO > Change text active voice: Takes selected text, sends OpenAI’s best model instructs return text active voice. active_voice","code":""},{"path":"/index.html","id":"writecode-from-prompt","dir":"","previous_headings":"Usage > Active voice","what":"Write/code from prompt","title":"gptstudio adds functionality based on OpenAI's GPT family of models directly into Rstudio","text":"Addins > GPTSTUDIO > Write/Code prompt: Takes selected text sends OpenAI prompt model work . like ChatGPT experience. Text prompt: prompt_text Code prompt: prompt_code","code":""},{"path":"/index.html","id":"comment-your-code","dir":"","previous_headings":"Usage","what":"Comment your code:","title":"gptstudio adds functionality based on OpenAI's GPT family of models directly into Rstudio","text":"Addins > GPTSTUDIO > Comment code: Takes selected text sends OpenAI prompt code specific model work , asks version comment added explaining code line line. add comments code","code":""},{"path":"/index.html","id":"provide-your-own-instructions","dir":"","previous_headings":"Usage","what":"Provide your own instructions","title":"gptstudio adds functionality based on OpenAI's GPT family of models directly into Rstudio","text":"Addins > GPTSTUDIO > Freeform GPT editor: Apply edit desire can dream selection code text. freeform","code":""},{"path":"/reference/avAddin.html","id":null,"dir":"Reference","previous_headings":"","what":"active voice Addin — avAddin","title":"active voice Addin — avAddin","text":"Call function Rstudio addin ask GPT change selected text active voice","code":""},{"path":"/reference/avAddin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"active voice Addin — avAddin","text":"","code":"avAddin()"},{"path":"/reference/check_api.html","id":null,"dir":"Reference","previous_headings":"","what":"Check API setup — check_api","title":"Check API setup — check_api","text":"function checks whether API key provided `OPENAI_API_KEY` environment variable valid. function re-check API already validated current session.","code":""},{"path":"/reference/check_api.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check API setup — check_api","text":"","code":"check_api(api_key = Sys.getenv(\"OPENAI_API_KEY\"))"},{"path":"/reference/check_api.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check API setup — check_api","text":"api_key API key. Defaults value `OPENAI_API_KEY` environment variable.","code":""},{"path":"/reference/check_api.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check API setup — check_api","text":"Nothing returned. API key valid, success message printed. API key invalid, error message printed function aborts.","code":""},{"path":"/reference/check_api_connection.html","id":null,"dir":"Reference","previous_headings":"","what":"Check connection to OpenAI's API works — check_api_connection","title":"Check connection to OpenAI's API works — check_api_connection","text":"function checks whether API key provided `OPENAI_API_KEY` environment variable valid.","code":""},{"path":"/reference/check_api_connection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check connection to OpenAI's API works — check_api_connection","text":"","code":"check_api_connection(api_key = Sys.getenv(\"OPENAI_API_KEY\"))"},{"path":"/reference/check_api_connection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check connection to OpenAI's API works — check_api_connection","text":"api_key API key. Defaults value `OPENAI_API_KEY` environment variable.","code":""},{"path":"/reference/check_api_connection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check connection to OpenAI's API works — check_api_connection","text":"Nothing returned. API key valid, success message printed. API key invalid, error message printed function aborted.","code":""},{"path":"/reference/check_api_key.html","id":null,"dir":"Reference","previous_headings":"","what":"Check API key — check_api_key","title":"Check API key — check_api_key","text":"function checks whether API key provided argument correct format.","code":""},{"path":"/reference/check_api_key.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check API key — check_api_key","text":"","code":"check_api_key(api_key = Sys.getenv(\"OPENAI_API_KEY\"))"},{"path":"/reference/check_api_key.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check API key — check_api_key","text":"api_key API key. Defaults value `OPENAI_API_KEY` environment variable.","code":""},{"path":"/reference/check_api_key.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check API key — check_api_key","text":"Nothing returned. API key correct format, success message printed. API key correct format, error message printed function aborts.","code":""},{"path":"/reference/comAddin.html","id":null,"dir":"Reference","previous_headings":"","what":"active voice Addin — comAddin","title":"active voice Addin — comAddin","text":"Call function Rstudio addin ask GPT add comments code","code":""},{"path":"/reference/comAddin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"active voice Addin — comAddin","text":"","code":"comAddin()"},{"path":"/reference/gptAddin.html","id":null,"dir":"Reference","previous_headings":"","what":"Freeform GPT editor — gptAddin","title":"Freeform GPT editor — gptAddin","text":"Call function Rstudio addin open GPT shiny app.","code":""},{"path":"/reference/gptAddin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Freeform GPT editor — gptAddin","text":"","code":"gptAddin()"},{"path":"/reference/gpt_create.html","id":null,"dir":"Reference","previous_headings":"","what":"Use GPT to improve text — gpt_create","title":"Use GPT to improve text — gpt_create","text":"function uses GPT model OpenAI improve spelling grammar selected text current RStudio session.","code":""},{"path":"/reference/gpt_create.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use GPT to improve text — gpt_create","text":"","code":"gpt_create(   model,   temperature,   max_tokens,   openai_api_key = Sys.getenv(\"OPENAI_API_KEY\"),   openai_organization = NULL,   append_text = TRUE )"},{"path":"/reference/gpt_create.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use GPT to improve text — gpt_create","text":"model name GPT model use. temperature parameter controlling randomness GPT model's output. max_tokens Maximum number tokens return (related length response), defaults 500 openai_api_key API key OpenAI API. openai_organization optional organization ID OpenAI API. append_text Add text selection rather replace, defaults TRUE","code":""},{"path":"/reference/gpt_create.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use GPT to improve text — gpt_create","text":"Nothing returned. improved text inserted current RStudio session.","code":""},{"path":"/reference/gpt_edit.html","id":null,"dir":"Reference","previous_headings":"","what":"Use GPT to improve text — gpt_edit","title":"Use GPT to improve text — gpt_edit","text":"function uses GPT model OpenAI improve spelling grammar selected text current RStudio session.","code":""},{"path":"/reference/gpt_edit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use GPT to improve text — gpt_edit","text":"","code":"gpt_edit(   model,   instruction,   temperature,   openai_api_key = Sys.getenv(\"OPENAI_API_KEY\"),   openai_organization = NULL,   append_text = FALSE )"},{"path":"/reference/gpt_edit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use GPT to improve text — gpt_edit","text":"model name GPT model use. instruction Instruction given model improve text. temperature parameter controlling randomness GPT model's output. openai_api_key API key OpenAI API. openai_organization optional organization ID OpenAI API. append_text Add text selection rather replace, defaults FALSE","code":""},{"path":"/reference/gpt_edit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use GPT to improve text — gpt_edit","text":"Nothing returned. improved text inserted current RStudio session.","code":""},{"path":"/reference/sandgAddin.html","id":null,"dir":"Reference","previous_headings":"","what":"spelling and grammar Addin — sandgAddin","title":"spelling and grammar Addin — sandgAddin","text":"Call function Rstudio addin ask GPT improve spelling grammar selected text.","code":""},{"path":"/reference/sandgAddin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"spelling and grammar Addin — sandgAddin","text":"","code":"sandgAddin()"},{"path":"/reference/wpAddin.html","id":null,"dir":"Reference","previous_headings":"","what":"write/code from prompt Addin — wpAddin","title":"write/code from prompt Addin — wpAddin","text":"Call function Rstudio addin ask GPT write text code descriptive prompt","code":""},{"path":"/reference/wpAddin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"write/code from prompt Addin — wpAddin","text":"","code":"wpAddin()"}]
