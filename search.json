[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 GPTstudio authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Michel Nivard. Author, maintainer. James Wade. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Nivard M, Wade J (2023). gptstudio: gptstudio adds functionality based OpenAI's GPT family models directly Rstudio. https://github.com/MichelNivard/gptstudio, https://michelnivard.github.io/gptstudio/.","code":"@Manual{,   title = {gptstudio: gptstudio adds functionality based on OpenAI's GPT family of models directly into Rstudio},   author = {Michel Nivard and James Wade},   year = {2023},   note = {https://github.com/MichelNivard/gptstudio, https://michelnivard.github.io/gptstudio/}, }"},{"path":"/index.html","id":"gptstudio-","dir":"","previous_headings":"","what":"gptstudio adds functionality based on OpenAI's GPT family of models directly into Rstudio","title":"gptstudio adds functionality based on OpenAI's GPT family of models directly into Rstudio","text":"goal gptstudio R programmers easily incorporate use large language models (LLMs) project workflows. models appear step change use text knowledge work, carefully consider ethical implications using models. Ethics LLMs (also called Foundation Models) area active discussion. addins, tailored R developers, also see sister package: gpttools","code":""},{"path":"/index.html","id":"install-the-addins-from-this-package","dir":"","previous_headings":"","what":"Install the addins from this package:","title":"gptstudio adds functionality based on OpenAI's GPT family of models directly into Rstudio","text":"","code":"require(devtools) install_github(\"MichelNivard/gptstudio\")"},{"path":"/index.html","id":"privacy-notice","dir":"","previous_headings":"","what":"Privacy Notice","title":"gptstudio adds functionality based on OpenAI's GPT family of models directly into Rstudio","text":"functions work taking text code highlighted/selected cursor, prompt use one built-apps, send OpenAI part prompt; fall privacy notice/rules/exceptions agreed OpenAI making account. can’t tell guarantee secure prompts sent OpenAI. don’t know OpenAI prompts, OpenAI clear use prompts results improve model (see terms use) unless opt-explicitly contacting . code designed share highlighted/selected text, prompt build help one apps elements R environment. Make sure aware send OpenAI accidentally share sensitive data OpenAI. HIGHLIGHT, INCLUDE PROMPT, THEREFORE UPLOAD, DATA/CODE/TEXT REMAIN PRIVATE","code":""},{"path":"/index.html","id":"prerequisites","dir":"","previous_headings":"","what":"Prerequisites","title":"gptstudio adds functionality based on OpenAI's GPT family of models directly into Rstudio","text":"Make OpenAI account. now, free one . Create OpenAI API key use openai package within Rstudio Set API key Rstudio one two ways: default, functions openai look OPENAI_API_KEY environment variable. want set global environment variable, can use following command, \"<APIKEY>\" replaced actual key: Alternatively, can set key .Renviron file. Otherwise, can add key .Renviron file project. following commands open .Renviron editing: can add following line file (, replace \"<APIKEY>\" actual key): now set API key every time start particular project. Note: using GitHub/Gitlab, forget add .Renviron .gitignore!","code":"Sys.setenv(OPENAI_API_KEY = \"<APIKEY>\") require(usethis) edit_r_environ(scope = \"project\") OPENAI_API_KEY= \"<APIKEY>\")"},{"path":"/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"gptstudio adds functionality based on OpenAI's GPT family of models directly into Rstudio","text":"examples use.","code":""},{"path":"/index.html","id":"chat-with-gpt-in-quarto","dir":"","previous_headings":"Usage","what":"Chat with GPT in Quarto","title":"gptstudio adds functionality based on OpenAI's GPT family of models directly into Rstudio","text":"Addins > GPTSTUDIO > Start GPT Chat Type question. **Addins > GPTSTUDIO > GPT Chat","code":""},{"path":"/index.html","id":"spelling-ang-grammar-check","dir":"","previous_headings":"Usage","what":"Spelling ang grammar check","title":"gptstudio adds functionality based on OpenAI's GPT family of models directly into Rstudio","text":"Addins > GPTSTUDIO > Spelling Grammar: Takes selected text sends OpenAI’s best model instructs return spelling grammar checked version. spelling","code":""},{"path":"/index.html","id":"active-voice","dir":"","previous_headings":"Usage","what":"Active voice","title":"gptstudio adds functionality based on OpenAI's GPT family of models directly into Rstudio","text":"Addins > GPTSTUDIO > Change text active voice: Takes selected text, sends OpenAI’s best model instructs return text active voice. active_voice","code":""},{"path":"/index.html","id":"writecode-from-prompt","dir":"","previous_headings":"Usage > Active voice","what":"Write/code from prompt","title":"gptstudio adds functionality based on OpenAI's GPT family of models directly into Rstudio","text":"Addins > GPTSTUDIO > Write/Code prompt: Takes selected text sends OpenAI prompt model work . like ChatGPT experience. Text prompt: prompt_text Code prompt: prompt_code","code":""},{"path":"/index.html","id":"comment-your-code","dir":"","previous_headings":"Usage","what":"Comment your code:","title":"gptstudio adds functionality based on OpenAI's GPT family of models directly into Rstudio","text":"Addins > GPTSTUDIO > Comment code: Takes selected text sends OpenAI prompt code specific model work , asks version comment added explaining code line line. add comments code","code":""},{"path":"/index.html","id":"provide-your-own-instructions","dir":"","previous_headings":"Usage","what":"Provide your own instructions","title":"gptstudio adds functionality based on OpenAI's GPT family of models directly into Rstudio","text":"Addins > GPTSTUDIO > Freeform GPT editor: Apply edit desire can dream selection code text. freeform","code":""},{"path":"/reference/avAddin.html","id":null,"dir":"Reference","previous_headings":"","what":"active voice Addin — avAddin","title":"active voice Addin — avAddin","text":"Call function Rstudio addin ask GPT change selected text active voice","code":""},{"path":"/reference/avAddin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"active voice Addin — avAddin","text":"","code":"avAddin()"},{"path":"/reference/check_api.html","id":null,"dir":"Reference","previous_headings":"","what":"Check API setup — check_api","title":"Check API setup — check_api","text":"function checks whether API key provided `OPENAI_API_KEY` environment variable valid. function re-check API already validated current session.","code":""},{"path":"/reference/check_api.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check API setup — check_api","text":"","code":"check_api()"},{"path":"/reference/check_api.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check API setup — check_api","text":"Nothing returned. API key valid, success message printed. API key invalid, error message printed function aborts.","code":""},{"path":"/reference/check_api_connection.html","id":null,"dir":"Reference","previous_headings":"","what":"Check connection to OpenAI's API works — check_api_connection","title":"Check connection to OpenAI's API works — check_api_connection","text":"function checks whether API key provided `OPENAI_API_KEY` environment variable valid.","code":""},{"path":"/reference/check_api_connection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check connection to OpenAI's API works — check_api_connection","text":"","code":"check_api_connection(api_key)"},{"path":"/reference/check_api_connection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check connection to OpenAI's API works — check_api_connection","text":"api_key API key.","code":""},{"path":"/reference/check_api_connection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check connection to OpenAI's API works — check_api_connection","text":"Nothing returned. API key valid, success message printed. API key invalid, error message printed function aborted.","code":""},{"path":"/reference/check_api_key.html","id":null,"dir":"Reference","previous_headings":"","what":"Check API key — check_api_key","title":"Check API key — check_api_key","text":"function checks whether API key provided argument correct format.","code":""},{"path":"/reference/check_api_key.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check API key — check_api_key","text":"","code":"check_api_key(api_key)"},{"path":"/reference/check_api_key.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check API key — check_api_key","text":"api_key API key.","code":""},{"path":"/reference/check_api_key.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check API key — check_api_key","text":"Nothing returned. API key correct format, success message printed. API key correct format, error message printed function aborts.","code":""},{"path":"/reference/collect_dataframes.html","id":null,"dir":"Reference","previous_headings":"","what":"Collect Dataframes — collect_dataframes","title":"Collect Dataframes — collect_dataframes","text":"Collect dataframes global environment.","code":""},{"path":"/reference/collect_dataframes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collect Dataframes — collect_dataframes","text":"","code":"collect_dataframes()"},{"path":"/reference/collect_dataframes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collect Dataframes — collect_dataframes","text":"character vector dataframe names.","code":""},{"path":"/reference/comAddin.html","id":null,"dir":"Reference","previous_headings":"","what":"active voice Addin — comAddin","title":"active voice Addin — comAddin","text":"Call function Rstudio addin ask GPT add comments code","code":""},{"path":"/reference/comAddin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"active voice Addin — comAddin","text":"","code":"comAddin()"},{"path":"/reference/create_gpt_chat.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a GPT Q&A File — create_gpt_chat","title":"Create a GPT Q&A File — create_gpt_chat","text":"function creates GPT Q&file use OpenAI's GPT models.","code":""},{"path":"/reference/create_gpt_chat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a GPT Q&A File — create_gpt_chat","text":"","code":"create_gpt_chat(path = \"gpt_q_and_a.qmd\")"},{"path":"/reference/create_gpt_chat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a GPT Q&A File — create_gpt_chat","text":"path path file created. Defaults \"gpt_q_and_a.qmd\"","code":""},{"path":"/reference/gpt_addin.html","id":null,"dir":"Reference","previous_headings":"","what":"Freeform GPT editor — gpt_addin","title":"Freeform GPT editor — gpt_addin","text":"Call function RStudio addin open GPT shiny app.","code":""},{"path":"/reference/gpt_addin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Freeform GPT editor — gpt_addin","text":"","code":"gpt_addin()"},{"path":"/reference/gpt_create.html","id":null,"dir":"Reference","previous_headings":"","what":"Use GPT to improve text — gpt_create","title":"Use GPT to improve text — gpt_create","text":"function uses GPT model OpenAI improve spelling  grammar selected text current RStudio session.","code":""},{"path":"/reference/gpt_create.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use GPT to improve text — gpt_create","text":"","code":"gpt_create(   model,   temperature,   max_tokens = getOption(\"gptstudio.max_tokens\"),   openai_api_key = Sys.getenv(\"OPENAI_API_KEY\"),   openai_organization = NULL,   append_text = TRUE )"},{"path":"/reference/gpt_create.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use GPT to improve text — gpt_create","text":"model name GPT model use. temperature parameter controlling randomness GPT model's output. max_tokens Maximum number tokens return (related length response), defaults 500 openai_api_key API key OpenAI API. openai_organization optional organization ID OpenAI API. append_text Add text selection rather replace, default TRUE","code":""},{"path":"/reference/gpt_create.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use GPT to improve text — gpt_create","text":"Nothing returned. improved text inserted current RStudio session.","code":""},{"path":"/reference/gpt_edit.html","id":null,"dir":"Reference","previous_headings":"","what":"Use GPT to improve text — gpt_edit","title":"Use GPT to improve text — gpt_edit","text":"function uses GPT model OpenAI improve spelling grammar selected text current RStudio session.","code":""},{"path":"/reference/gpt_edit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use GPT to improve text — gpt_edit","text":"","code":"gpt_edit(   model,   instruction,   temperature,   openai_api_key = Sys.getenv(\"OPENAI_API_KEY\"),   openai_organization = NULL,   append_text = FALSE )"},{"path":"/reference/gpt_edit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use GPT to improve text — gpt_edit","text":"model name GPT model use. instruction Instruction given model improve text. temperature parameter controlling randomness GPT model's output. openai_api_key API key OpenAI API. openai_organization optional organization ID OpenAI API. append_text Add text selection rather replace, defaults FALSE","code":""},{"path":"/reference/gpt_edit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use GPT to improve text — gpt_edit","text":"Nothing returned. improved text inserted current  RStudio session.","code":""},{"path":"/reference/gpt_insert.html","id":null,"dir":"Reference","previous_headings":"","what":"Use GPT to improve text — gpt_insert","title":"Use GPT to improve text — gpt_insert","text":"function uses GPT model OpenAI improve spelling grammar selected text current RStudio session.","code":""},{"path":"/reference/gpt_insert.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use GPT to improve text — gpt_insert","text":"","code":"gpt_insert(   model,   prompt,   temperature = 0.1,   max_tokens = getOption(\"gptstudio.max_tokens\"),   openai_api_key = Sys.getenv(\"OPENAI_API_KEY\"),   openai_organization = NULL,   append_text = FALSE )"},{"path":"/reference/gpt_insert.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use GPT to improve text — gpt_insert","text":"model name GPT model use. prompt Instructions insertion temperature parameter controlling randomness GPT model's output. max_tokens Maximum number tokens return (related length response), defaults 500 openai_api_key API key OpenAI API. openai_organization optional organization ID OpenAI API. append_text Add text selection rather replace, defaults FALSE","code":""},{"path":"/reference/gpt_insert.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use GPT to improve text — gpt_insert","text":"Nothing returned. improved text inserted current RStudio session.","code":""},{"path":"/reference/openai_chat.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate an answer to a question using OpenAI — openai_chat","title":"Generate an answer to a question using OpenAI — openai_chat","text":"Generate answer question using OpenAI","code":""},{"path":"/reference/openai_chat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate an answer to a question using OpenAI — openai_chat","text":"","code":"openai_chat()"},{"path":"/reference/openai_create_completion.html","id":null,"dir":"Reference","previous_headings":"","what":"Create completion — openai_create_completion","title":"Create completion — openai_create_completion","text":"code altered [openai](https://github.com/irudnyts/openai). Credit goes irudnyts contributions function.","code":""},{"path":"/reference/openai_create_completion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create completion — openai_create_completion","text":"","code":"openai_create_completion(   model,   prompt = \"<|endoftext|>\",   suffix = NULL,   max_tokens = 16,   temperature = 1,   top_p = 1,   n = 1,   logprobs = NULL,   echo = FALSE,   stop = NULL,   presence_penalty = 0,   frequency_penalty = 0,   best_of = 1,   logit_bias = NULL,   user = NULL,   openai_api_key = Sys.getenv(\"OPENAI_API_KEY\"),   openai_organization = NULL )"},{"path":"/reference/openai_create_completion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create completion — openai_create_completion","text":"model required; length one character vector. prompt required; defaults `\"<|endoftext|>\"`; arbitrary length character vector. suffix optional; defaults `NULL`; length one character vector. max_tokens required; defaults `16`; length one numeric vector integer value greater `0`. temperature required; defaults `1`; length one numeric vector value `0` `2`. top_p required; defaults `1`; length one numeric vector value `0` `1`. n required; defaults `1`; length one numeric vector integer value greater `0`. logprobs optional; defaults `NULL`; length one numeric vector integer value `0` `5`. echo required; defaults `FALSE`; length one logical vector. stop optional; defaults `NULL`; character vector length one four. presence_penalty required; defaults `0`; length one numeric vector value `-2` `2`. frequency_penalty required; defaults `0`; length one numeric vector value `-2` `2`. best_of required; defaults `1`; length one numeric vector integer value greater `0`. logit_bias optional; defaults `NULL`; named list. user optional; defaults `NULL`; length one character vector. openai_api_key required; defaults `Sys.getenv(\"OPENAI_API_KEY\")` (.e., value retrieved `.Renviron` file); length one character vector. Specifies OpenAI API key. openai_organization optional; defaults `NULL`; length one character vector. Specifies OpenAI organization.","code":""},{"path":"/reference/openai_create_completion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create completion — openai_create_completion","text":"Returns list, elements contain completion(s)   supplementary information.","code":""},{"path":"/reference/openai_create_completion.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create completion — openai_create_completion","text":"Creates completion based provided prompt parameters. See [page](https://beta.openai.com/docs/api-reference/completions/create) details. arguments description please refer official [docs](https://beta.openai.com/docs/api-reference/completions/create).","code":""},{"path":"/reference/openai_create_completion.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create completion — openai_create_completion","text":"","code":"if (FALSE) { create_completion(   model = \"text-davinci-002\",   prompt = \"Say this is a test\",   max_tokens = 5 )  logit_bias <- list(   \"11\" = -100,   \"13\" = -100 ) create_completion(   model = \"ada\",   prompt = \"Generate a question and an answer\",   n = 4,   best_of = 4,   logit_bias = logit_bias ) }"},{"path":"/reference/openai_create_edit.html","id":null,"dir":"Reference","previous_headings":"","what":"Create edit — openai_create_edit","title":"Create edit — openai_create_edit","text":"#' code altered [openai](https://github.com/irudnyts/openai). Credit goes irudnyts contributions function.","code":""},{"path":"/reference/openai_create_edit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create edit — openai_create_edit","text":"","code":"openai_create_edit(   model,   input = \"\\\"\",   instruction,   temperature = 1,   top_p = 1,   openai_api_key = Sys.getenv(\"OPENAI_API_KEY\"),   openai_organization = NULL )"},{"path":"/reference/openai_create_edit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create edit — openai_create_edit","text":"model required; length one character vector. input required; defaults `'\"'`; length one character vector. instruction required; length one character vector. temperature required; defaults `1`; length one numeric vector value `0` `2`. top_p required; defaults `1`; length one numeric vector value `0` `1`. openai_api_key required; defaults `Sys.getenv(\"OPENAI_API_KEY\")` (.e., value retrieved `.Renviron` file); length one character vector. Specifies OpenAI API key. openai_organization optional; defaults `NULL`; length one character vector. Specifies OpenAI organization.","code":""},{"path":"/reference/openai_create_edit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create edit — openai_create_edit","text":"Returns list, elements contain edited version prompt   supplementary information.","code":""},{"path":"/reference/openai_create_edit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create edit — openai_create_edit","text":"Creates edit based provided input, instruction, parameters. See [page](https://beta.openai.com/docs/api-reference/edits/create) details. arguments description please refer official [docs](https://beta.openai.com/docs/api-reference/edits/create).","code":""},{"path":"/reference/openai_create_edit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create edit — openai_create_edit","text":"","code":"if (FALSE) { create_edit(   model = \"text-davinci-edit-001\",   input = \"What day of the wek is it?\",   instruction = \"Fix the spelling mistakes\" ) }"},{"path":"/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling `rhs(lhs)`.","code":""},{"path":"/reference/prep_data_prompt.html","id":null,"dir":"Reference","previous_headings":"","what":"Preps OpenAI model prompt for data documentation — prep_data_prompt","title":"Preps OpenAI model prompt for data documentation — prep_data_prompt","text":"Prepares data prompt summarizing data printing ","code":""},{"path":"/reference/prep_data_prompt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preps OpenAI model prompt for data documentation — prep_data_prompt","text":"","code":"prep_data_prompt(data, method, prompt)"},{"path":"/reference/prep_data_prompt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preps OpenAI model prompt for data documentation — prep_data_prompt","text":"data data.frame method summarization method, one \"skimr\", \"glimpse\", \"summary\" prompt prompt string","code":""},{"path":"/reference/prep_data_prompt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preps OpenAI model prompt for data documentation — prep_data_prompt","text":"string","code":""},{"path":"/reference/prep_data_prompt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Preps OpenAI model prompt for data documentation — prep_data_prompt","text":"","code":"prep_data_prompt(   data = mtcars,   method = \"skimr\",   prompt = \"This is a test prompt.\" ) #> [1] \"── Data Summary ────────────────────────\\n                           Values\\nName                       data  \\nNumber of rows             32    \\nNumber of columns          11    \\n_______________________          \\nColumn type frequency:           \\n  numeric                  11    \\n________________________         \\nGroup variables            None  \\n\\n── Variable type: numeric ──────────────────────────────────────────────────────\\n   skim_variable n_missing complete_rate    mean      sd    p0    p25    p50\\n\\033[38;5;250m 1\\033[39m mpg                   0             1  20.1     6.03  10.4   15.4   19.2 \\n\\033[38;5;250m 2\\033[39m cyl                   0             1   6.19    1.79   4      4      6   \\n\\033[38;5;250m 3\\033[39m disp                  0             1 231.    124.    71.1  121.   196.  \\n\\033[38;5;250m 4\\033[39m hp                    0             1 147.     68.6   52     96.5  123   \\n\\033[38;5;250m 5\\033[39m drat                  0             1   3.60    0.535  2.76   3.08   3.70\\n\\033[38;5;250m 6\\033[39m wt                    0             1   3.22    0.978  1.51   2.58   3.32\\n\\033[38;5;250m 7\\033[39m qsec                  0             1  17.8     1.79  14.5   16.9   17.7 \\n\\033[38;5;250m 8\\033[39m vs                    0             1   0.438   0.504  0      0      0   \\n\\033[38;5;250m 9\\033[39m am                    0             1   0.406   0.499  0      0      0   \\n\\033[38;5;250m10\\033[39m gear                  0             1   3.69    0.738  3      3      4   \\n\\033[38;5;250m11\\033[39m carb                  0             1   2.81    1.62   1      2      2   \\n      p75   p100\\n\\033[38;5;250m 1\\033[39m  22.8   33.9 \\n\\033[38;5;250m 2\\033[39m   8      8   \\n\\033[38;5;250m 3\\033[39m 326    472   \\n\\033[38;5;250m 4\\033[39m 180    335   \\n\\033[38;5;250m 5\\033[39m   3.92   4.93\\n\\033[38;5;250m 6\\033[39m   3.61   5.42\\n\\033[38;5;250m 7\\033[39m  18.9   22.9 \\n\\033[38;5;250m 8\\033[39m   1      1   \\n\\033[38;5;250m 9\\033[39m   1      1   \\n\\033[38;5;250m10\\033[39m   4      5   \\n\\033[38;5;250m11\\033[39m   4      8   \\nThis is a test prompt.\""},{"path":"/reference/run_gpt_freeform.html","id":null,"dir":"Reference","previous_headings":"","what":"Shiny app that supports GPT freeform addin — run_gpt_freeform","title":"Shiny app that supports GPT freeform addin — run_gpt_freeform","text":"Shiny app supports GPT freeform addin","code":""},{"path":"/reference/run_gpt_freeform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shiny app that supports GPT freeform addin — run_gpt_freeform","text":"","code":"run_gpt_freeform()"},{"path":"/reference/run_gpt_freeform.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shiny app that supports GPT freeform addin — run_gpt_freeform","text":"Nothing returned, shiny app run","code":""},{"path":"/reference/run_specify_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Run a Shiny App to Specify a Model with GPT — run_specify_model","title":"Run a Shiny App to Specify a Model with GPT — run_specify_model","text":"Run Shiny App Specify Model GPT","code":""},{"path":"/reference/run_specify_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run a Shiny App to Specify a Model with GPT — run_specify_model","text":"","code":"run_specify_model()"},{"path":"/reference/sandgAddin.html","id":null,"dir":"Reference","previous_headings":"","what":"spelling and grammar Addin — sandgAddin","title":"spelling and grammar Addin — sandgAddin","text":"Call function Rstudio addin ask GPT improve spelling grammar selected text.","code":""},{"path":"/reference/sandgAddin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"spelling and grammar Addin — sandgAddin","text":"","code":"sandgAddin()"},{"path":"/reference/specify_model_addin.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify Model Addin — specify_model_addin","title":"Specify Model Addin — specify_model_addin","text":"function launches GPT Specify Model Addin.","code":""},{"path":"/reference/specify_model_addin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify Model Addin — specify_model_addin","text":"","code":"specify_model_addin()"},{"path":"/reference/summarize_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize data — summarize_data","title":"Summarize data — summarize_data","text":"Summarize data frame using one three methods.","code":""},{"path":"/reference/summarize_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize data — summarize_data","text":"","code":"summarize_data(   data,   method = c(\"skimr\", \"skimr_lite\", \"column_types\", \"summary\") )"},{"path":"/reference/summarize_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize data — summarize_data","text":"data data frame method character vector specifying method use summarizing data. Must one \"skimr\", \"skimr_lite\", \"column_types\", \"summary\". Default \"skimr\".","code":""},{"path":"/reference/summarize_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize data — summarize_data","text":"Summarized data according specified method","code":""},{"path":"/reference/wpAddin.html","id":null,"dir":"Reference","previous_headings":"","what":"write/code from prompt Addin — wpAddin","title":"write/code from prompt Addin — wpAddin","text":"Call function Rstudio addin ask GPT write text code descriptive prompt","code":""},{"path":"/reference/wpAddin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"write/code from prompt Addin — wpAddin","text":"","code":"wpAddin()"}]
